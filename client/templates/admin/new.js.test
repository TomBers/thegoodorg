Template.newAdmin.rendered = function(){
	 Meteor.subscribe('Admin1');
	//  Meteor.subscribe('Admin2');
	// Session.set('ownerId', this.data.ownerId);
	// Session.set('projectId', this.data._id);
}

Template.newAdmin.events({
})

Template.newAdmin.helpers({

    allAdmin1: function(){
      //  Meteor.subscribe('Admin1');
        return Admin1.find();
    },

    allAdmin2: function(){
        return Admin2.find();
    },

    allAdmin3: function(){
        return Admin3.find();
    }


});

Schemas = {};

Template.registerHelper("Schemas", Schemas);

Schemas.Person = new SimpleSchema({
  firstName: {
    type: String,
    index: 1,
    unique: true
  },
  lastName: {
    type: String,
    optional: true
  },
  age: {
    type: Number,
    optional: true
  }
});

var Collections = {};

Template.registerHelper("Collections", Collections);

People = Collections.People = new Mongo.Collection("People");
People.attachSchema(Schemas.Person);

Meteor.publish(null, function () {
  return People.find();
});

People.allow({
  insert: function () {
    return true;
  },
  remove: function () {
    return true;
  }
});

Template.updateaf.helpers({
  autoSaveMode: function () {
    return Session.get("autoSaveMode") ? true : false;
  },
  selectedPersonDoc: function () {
    return People.findOne(Session.get("selectedPersonId"));
  },
  isSelectedPerson: function () {
    return Session.equals("selectedPersonId", this._id);
  },
  formType: function () {
    if (Session.get("selectedPersonId")) {
      return "update";
    } else {
      return "disabled";
    }
  },
  disableButtons: function () {
    return !Session.get("selectedPersonId");
  }
});

Template.updateaf.events({
  'click .person-row': function () {
    Session.set("selectedPersonId", this._id);
  },
  'change .autosave-toggle': function () {
    Session.set("autoSaveMode", !Session.get("autoSaveMode"));
  }
});
